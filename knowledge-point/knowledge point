node app.js

mkdir命令
mkdir命令用来创建目录   语法：(mkdir (选项)(参数)


fs模块
fs模块用于对系统文件及目录进行读写操作。
使用require('fs')载入fs模块，模块中所有方法都有同步和异步两种形式。
fs.readFile(filename,[option],callback) 方法读取文件。
readFile同步的写法就是没有回调函数：fs.readFileSync(filename,[options])。
使用fs.writeFile(filename,data,[options],callback)写入内容到文件。


os 模块
Node.js os 模块提供了一些基本的系统操作函数
os.tmpdir()
返回操作系统的默认临时文件夹
os.type()
返回操作系统名
os.hostname()
返回操作系统的主机名。



lodash是一个具有一致接口、模块化、高性能等特性的javascript工具库.  npm install lodash -g(http://lodashjs.com/docs/)


使用nodemon让node自动重启
自动重启的工具——nodemon  启动:nodemon app.js



命令行参数可以用系统变量 process.argv 获取。执行时，直接在脚本文件后面，加上参数即可。
#!/usr/bin/env node

console.log('hello ', process.argv[2]);

node.js 命令行框架 yargs
yargs 模块能够解决如何处理命令行参数，yargs 模块提供 argv 对象，用来读取命令行参数


https://segmentfault.com/a/1190000006255923 数据库（Mac 上的 MySQL 管理工具 -- Sequel Pro）

http://i5ting.github.io/node-debug-tutorial/ (node-debug tutorial)



nodejs里的repl(交互式解释器)
交互式解释器（REPL）既可以作为一个独立的程序运行，也可以很容易地包含在其他程序中作为整体程序的一部分使用。
REPL为运行JavaScript脚本与查看运行结果提供了一种交互方式，通常REPL交互方式可以用于调试、测试以及试验某种想法。




